---

- hosts: localhost
  connection: local
  gather_facts: False



  tasks:

#    - name: Facts
#      block:
#
#      - name: Get instances facts
#        ec2_instance_info:
#          aws_access_key: "{{ec2_access_key}}"
#          aws_secret_key: "{{ec2_secret_key}}"
#          region: "{{ region }}"
#        register: result
#
#      - name: Instances ID
#        debug:
#          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
#        loop: "{{ result.instances }}"
#
#      tags: always


    - name: Provisioning EC2 instances
      block:

      - name: Upload public key to AWS
        ec2_key:
          name: "{{ key_name }}"
          key_material: "{{ lookup('file', '~/.ssh/{{ key_name }}.pub') }}"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"

      - name: Create security group
        ec2_group:
          name: "{{ sec_group }}"
          description: "Sec group for app {{ id }}"
          # vpc_id: 12345
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          rules:
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port
        register: result_sec_group

      - name: Provision instance(s)
        ec2:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          key_name: "{{ key_name }}"
          name: "{{ item }}"
          #id: "{{ id }}"
          group_id: "{{ result_sec_group.group_id }}"
          image: "{{ image }}"
          instance_type: t2.micro
          region: "{{ region }}"
          wait: true
          #count: 2
        register: ec2
        with_items: "{{ var_host }}"


      tags: ['never', 'create_ec2']
    - name: Add New instance to Host Group 
      add_host: 
       hostname: "{{item.public_ip}}"
       groupname: "{{ var_hosts }}"
      loop: "{{ ec2.instances }}"	
   - name: Wait for SSH to come up
     delegate_to: "{{ item.public_dns_name }}"
     wait_for_connection: 
       delay: 60
       timeout: 300
     loop: "{{ ec2.instances }}"

   - name: Configure instance(s)
     hosts: "{{ var_hosts }}"
     become: True
     gather_facts: True
     roles:
      - python
 
